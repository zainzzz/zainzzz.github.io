<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021.04.11 打卡 148. 排序链表</title>
      <link href="/2021/04/11/2021-04-11-%E6%89%93%E5%8D%A1-148-%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/"/>
      <url>/2021/04/11/2021-04-11-%E6%89%93%E5%8D%A1-148-%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="面试题-0806-汉诺塔问题"><a class="markdownIt-Anchor" href="#面试题-0806-汉诺塔问题"></a> <a href="https://leetcode-cn.com/problems/sort-list/">面试题 08.06. 汉诺塔问题</a></h2><ul><li>时间复杂度O(nlogn)</li><li>归并排序</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">sortList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sortList(head, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 左右分别排序，然后合并</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">sortList</span><span class="params">(ListNode head, ListNode tail)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (head.next == tail) &#123;</span><br><span class="line">            head.next = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode mid = head, fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != tail) &#123;</span><br><span class="line">            mid = mid.next;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            <span class="keyword">if</span> (fast != tail) &#123;</span><br><span class="line">                fast = fast.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode left = sortList(head, mid);</span><br><span class="line">        ListNode right = sortList(mid, tail);</span><br><span class="line">        ListNode sorted = merge(left, right);</span><br><span class="line">        <span class="keyword">return</span> sorted;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 合并排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">merge</span><span class="params">(ListNode left, ListNode right)</span> </span>&#123;</span><br><span class="line">        ListNode head = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode temp = head, leftTemp = left, rightTemp = right;</span><br><span class="line">        <span class="keyword">while</span> (leftTemp != <span class="keyword">null</span> &amp;&amp; rightTemp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (leftTemp.val &lt;= rightTemp.val) &#123;</span><br><span class="line">                temp.next = leftTemp;</span><br><span class="line">                leftTemp = leftTemp.next;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                temp.next = rightTemp;</span><br><span class="line">                rightTemp = rightTemp.next;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (leftTemp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            temp.next = leftTemp;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rightTemp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            temp.next = rightTemp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.04.11 打卡 面试题 08.06. 汉诺塔问题</title>
      <link href="/2021/04/11/2021-04-11-%E6%89%93%E5%8D%A1-%E9%9D%A2%E8%AF%95%E9%A2%98-08-06-%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/"/>
      <url>/2021/04/11/2021-04-11-%E6%89%93%E5%8D%A1-%E9%9D%A2%E8%AF%95%E9%A2%98-08-06-%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="面试题-0806-汉诺塔问题"><a class="markdownIt-Anchor" href="#面试题-0806-汉诺塔问题"></a> <a href="https://leetcode-cn.com/problems/hanota-lcci/">面试题 08.06. 汉诺塔问题</a></h2><ul><li>递归</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hanota</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B, List&lt;Integer&gt; C)</span> </span>&#123;</span><br><span class="line">        move(A.size(), A, B, C);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> size, List&lt;Integer&gt; a, List&lt;Integer&gt; b, List&lt;Integer&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">1</span>) &#123;</span><br><span class="line">            c.add(a.remove(a.size() - <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        move(size - <span class="number">1</span>, a, c, b);</span><br><span class="line">        c.add(a.remove(a.size() - <span class="number">1</span>));</span><br><span class="line">        move(size - <span class="number">1</span> , b, a, c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.31 打卡 剑指 Offer 59 - I. 滑动窗口的最大值</title>
      <link href="/2021/03/31/2021-03-31-%E6%89%93%E5%8D%A1-%E5%89%91%E6%8C%87-Offer-59-II-%E6%BB%91%E5%8A%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
      <url>/2021/03/31/2021-03-31-%E6%89%93%E5%8D%A1-%E5%89%91%E6%8C%87-Offer-59-II-%E6%BB%91%E5%8A%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="剑指-offer-59-i-滑动窗口的最大值"><a class="markdownIt-Anchor" href="#剑指-offer-59-i-滑动窗口的最大值"></a> <a href="https://leetcode-cn.com/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/">剑指 Offer 59 - I. 滑动窗口的最大值</a></h2><ul><li>时间复杂度O(n)</li><li>单调栈，每次保证栈顶是最大值，不在滑动窗口中的元素删除</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] maxSlidingWindow(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums.length == <span class="number">0</span> || k == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length - k + <span class="number">1</span>];</span><br><span class="line">        Deque&lt;Integer&gt; deque = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!deque.isEmpty() &amp;&amp; nums[i] &gt; nums[deque.peekLast()]) &#123;</span><br><span class="line">                deque.removeLast();</span><br><span class="line">            &#125;</span><br><span class="line">            deque.addLast(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (deque.peekFirst() &lt;= i - k) &#123;</span><br><span class="line">                deque.removeFirst();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &gt;= k) &#123;</span><br><span class="line">                result[left] = nums[deque.peekFirst()];</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
            <tag> 单调栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.31 打卡 剑指 Offer 59 - II. 队列的最大值</title>
      <link href="/2021/03/31/%E5%89%91%E6%8C%87-Offer-59-II-%E9%98%9F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
      <url>/2021/03/31/%E5%89%91%E6%8C%87-Offer-59-II-%E9%98%9F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>剑指 Offer 59 - II. 队列的最大值</p><h2 id="剑指-offer-59-ii-队列的最大值"><a class="markdownIt-Anchor" href="#剑指-offer-59-ii-队列的最大值"></a> <a href="https://leetcode-cn.com/problems/dui-lie-de-zui-da-zhi-lcof/">剑指 Offer 59 - II. 队列的最大值</a></h2><h3 id="解法一"><a class="markdownIt-Anchor" href="#解法一"></a> 解法一</h3><ul><li>均摊时间复杂度O(1)</li><li>空间复杂度O(n)</li><li>题目是队列，所以先进先出，所以当插入最大值时，可以删除之前的值，因为后面插入的总是后删除</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaxQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Deque&lt;Integer&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Deque&lt;Integer&gt; max;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MaxQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        list = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        max = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">max_value</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.isEmpty()? -<span class="number">1</span>: max.peekFirst();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push_back</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        list.offerLast(value);</span><br><span class="line">        <span class="keyword">while</span> (!max.isEmpty() &amp;&amp; value &gt; max.peekLast()) &#123;</span><br><span class="line">            max.pollLast();</span><br><span class="line">        &#125;</span><br><span class="line">        max.offerLast(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop_front</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (list.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pop = list.pop();</span><br><span class="line">        <span class="keyword">if</span> (max.peekFirst() == pop) &#123;</span><br><span class="line">            max.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pop;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MaxQueue object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MaxQueue obj = new MaxQueue();</span></span><br><span class="line"><span class="comment"> * int param_1 = obj.max_value();</span></span><br><span class="line"><span class="comment"> * obj.push_back(value);</span></span><br><span class="line"><span class="comment"> * int param_3 = obj.pop_front();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
            <tag> 单调栈 </tag>
            
            <tag> 剑指Offer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.28 打卡 LeetCode 739. 每日温度</title>
      <link href="/2021/03/28/2021-03-38-%E6%89%93%E5%8D%A1-LeetCode-%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6/"/>
      <url>/2021/03/28/2021-03-38-%E6%89%93%E5%8D%A1-LeetCode-%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="leetcode-739-每日温度"><a class="markdownIt-Anchor" href="#leetcode-739-每日温度"></a> <a href="https://leetcode-cn.com/problems/daily-temperatures/">LeetCode 739. 每日温度</a></h2><h3 id="解法一"><a class="markdownIt-Anchor" href="#解法一"></a> 解法一</h3><h4 id="双循环"><a class="markdownIt-Anchor" href="#双循环"></a> 双循环</h4><ul><li>时间复杂度O(n²)</li><li>空间复杂度O(n)</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] dailyTemperatures(<span class="keyword">int</span>[] T) &#123;</span><br><span class="line">       <span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[T.length];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; T.length; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span> (T[i] &lt; T[j]) &#123;</span><br><span class="line">                   num[i] = j - i;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               num[i] = <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="解法二"><a class="markdownIt-Anchor" href="#解法二"></a> 解法二</h3><h4 id="反向循环"><a class="markdownIt-Anchor" href="#反向循环"></a> 反向循环</h4><ul><li>时间复杂度O(nlgn)（我猜的</li><li>空间复杂度O(n)</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] dailyTemperatures(<span class="keyword">int</span>[] T) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[T.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = T.length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; T.length; j+=result[j]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (T[i] &lt; T[j]) &#123;</span><br><span class="line">                    result[i] = j - i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (result[j] == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="解法三"><a class="markdownIt-Anchor" href="#解法三"></a> 解法三</h3><h4 id="单调栈"><a class="markdownIt-Anchor" href="#单调栈"></a> 单调栈</h4><ul><li>时间复杂度O(n)</li><li>空间复杂度O(n)</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] dailyTemperatures(<span class="keyword">int</span>[] T) &#123;</span><br><span class="line">        Deque&lt;Integer&gt; stack = <span class="keyword">new</span> ArrayDeque&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> result[] = <span class="keyword">new</span> <span class="keyword">int</span>[T.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T.length; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!stack.isEmpty() &amp;&amp; T[i] &gt; T[stack.peek()]) &#123;</span><br><span class="line">                <span class="keyword">int</span> pop = stack.pop();</span><br><span class="line">                result[pop] = i - pop;</span><br><span class="line">            &#125;</span><br><span class="line">            stack.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
            <tag> 单调栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.28 打卡 LeetCode 16.26. 计算器</title>
      <link href="/2021/03/28/2021-03-38-%E6%89%93%E5%8D%A1-LeetCode-16-26-%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
      <url>/2021/03/28/2021-03-38-%E6%89%93%E5%8D%A1-LeetCode-16-26-%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://leetcode-cn.com/problems/calculator-lcci/">https://leetcode-cn.com/problems/calculator-lcci/</a></p><h2 id="leetcode-1626-计算器"><a class="markdownIt-Anchor" href="#leetcode-1626-计算器"></a> <a href="https://leetcode-cn.com/problems/calculator-lcci/">LeetCode 16.26. 计算器</a></h2><p>时间复杂度 O(n)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Integer&gt; nums = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; s.length()) &#123;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; s.length() &amp;&amp; s.charAt(i) == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= s.length()) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span> || c == <span class="string">&#x27;/&#x27;</span> || c == <span class="string">&#x27;+&#x27;</span> || c == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">while</span> (s.charAt(i) == <span class="string">&#x27; &#x27;</span>) i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(s.charAt(i))) &#123;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; s.length() &amp;&amp; Character.isDigit(s.charAt(i))) &#123;</span><br><span class="line">                    num = num * <span class="number">10</span> + s.charAt(i) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                    num = -num;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">                    num = nums.pop() * num;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                    num = nums.pop() / num;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            nums.push(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!nums.isEmpty()) &#123;</span><br><span class="line">            sum += nums.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.23 打卡 LeetCode 2.两数相加</title>
      <link href="/2021/03/23/2021-03-23-%E6%89%93%E5%8D%A1-LeetCode-2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
      <url>/2021/03/23/2021-03-23-%E6%89%93%E5%8D%A1-LeetCode-2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="leetcode-2两数相加"><a class="markdownIt-Anchor" href="#leetcode-2两数相加"></a> <a href="https://leetcode-cn.com/problems/add-two-numbers/">LeetCode 2.两数相加</a></h2><p>时间复杂度O(n)</p><h5 id="解法一递归"><a class="markdownIt-Anchor" href="#解法一递归"></a> 解法一：递归</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> l1;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (l1 == <span class="keyword">null</span> &amp;&amp; l2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> l2;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            l1.val = l1.val + l2.val;</span><br><span class="line">            jinwei(l1);</span><br><span class="line">            l1.next = addTwoNumbers(l1.next, l2.next);</span><br><span class="line">            <span class="keyword">return</span> l1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jinwei</span><span class="params">(ListNode l1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l1.val &gt; <span class="number">9</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (l1.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">                l1.next = <span class="keyword">new</span> ListNode(l1.val/<span class="number">10</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                l1.next.val += l1.val / <span class="number">10</span>;</span><br><span class="line">                jinwei(l1.next);</span><br><span class="line">            &#125;</span><br><span class="line">            l1.val %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//runtime:2 ms</span></span><br><span class="line"><span class="comment">//memory:39.3 MB</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="解法二链表计数如果大于10就进一位"><a class="markdownIt-Anchor" href="#解法二链表计数如果大于10就进一位"></a> 解法二：链表计数，如果大于10就进一位</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        ListNode root = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode node = root;</span><br><span class="line">        <span class="keyword">while</span>(l1!= <span class="keyword">null</span> || l2 !=<span class="keyword">null</span> || i != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> v1 = l1 != <span class="keyword">null</span>? l1.val: <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> v2 = l2 != <span class="keyword">null</span>? l2.val: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            ListNode sNode = <span class="keyword">new</span> ListNode((v1 + v2 + i) % <span class="number">10</span>);</span><br><span class="line">            node.next = sNode;</span><br><span class="line">            node = sNode;</span><br><span class="line"></span><br><span class="line">            i = (v1 + v2 + i) / <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(l1 != <span class="keyword">null</span>) l1 = l1.next;</span><br><span class="line">            <span class="keyword">if</span>(l2 != <span class="keyword">null</span>) l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//runtime:2 ms</span></span><br><span class="line"><span class="comment">//memory:39 MB</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
            <tag> 递归 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.23 打卡 LeetCode 206. 反转链表</title>
      <link href="/2021/03/23/2021-03-23-%E6%89%93%E5%8D%A1-LeetCode-206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
      <url>/2021/03/23/2021-03-23-%E6%89%93%E5%8D%A1-LeetCode-206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="leetcode-206-反转链表"><a class="markdownIt-Anchor" href="#leetcode-206-反转链表"></a> <a href="https://leetcode-cn.com/problems/reverse-linked-list/">LeetCode 206. 反转链表</a></h2><p>时间复杂度 O(n)</p><h5 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode prev = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode temp = head.next;</span><br><span class="line">            head.next = prev;</span><br><span class="line">            prev = head;</span><br><span class="line">            head = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//runtime:0 ms</span></span><br><span class="line"><span class="comment">//memory:38.3 MB</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverseList</span>(<span class="params">self, head</span>):</span></span><br><span class="line">        cur, prev = head, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">while</span> cur:</span><br><span class="line">            cur.<span class="built_in">next</span>, prev, cur = prev, cur, cur.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line"><span class="comment"># runtime:52 ms</span></span><br><span class="line"><span class="comment"># memory:7.7 MB</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.19 打卡 LeetCode 1528.重新排列字符串</title>
      <link href="/2021/03/19/Untitled/"/>
      <url>/2021/03/19/Untitled/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="leetcode-1528重新排列字符串"><a class="markdownIt-Anchor" href="#leetcode-1528重新排列字符串"></a> <a href="https://leetcode-cn.com/problems/shuffle-string/">LeetCode 1528.重新排列字符串</a></h2><p>时间复杂度O(n)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">restoreString</span><span class="params">(String s, <span class="keyword">int</span>[] indices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] chars = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; indices.length; i++) &#123;</span><br><span class="line">            chars[indices[i]] = s.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(chars);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//runtime:1 ms</span></span><br><span class="line"><span class="comment">//memory:38.5 MB</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.03.19 打卡 01.03. URL化</title>
      <link href="/2021/03/19/2021-03-19-%E6%89%93%E5%8D%A1/"/>
      <url>/2021/03/19/2021-03-19-%E6%89%93%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="面试题-0103-url化"><a class="markdownIt-Anchor" href="#面试题-0103-url化"></a> <a href="https://leetcode-cn.com/problems/string-to-url-lcci/">面试题 01.03. URL化</a></h2><h5 id="解题一-先计算长度然后再遍历"><a class="markdownIt-Anchor" href="#解题一-先计算长度然后再遍历"></a> 解题一: 先计算长度，然后再遍历</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">replaceSpaces</span><span class="params">(String S, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ln = <span class="number">0</span>;                                       </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;                </span><br><span class="line">            <span class="keyword">if</span> (S.charAt(i) == <span class="string">&#x27; &#x27;</span>) &#123;                     </span><br><span class="line">                ln += <span class="number">3</span>;                                  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;                                      </span><br><span class="line">                ln ++;                                    </span><br><span class="line">            &#125;                                             </span><br><span class="line">        &#125;                                                 </span><br><span class="line">        <span class="keyword">char</span>[] c = <span class="keyword">new</span> <span class="keyword">char</span>[ln];                          </span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;                                        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;                </span><br><span class="line">            <span class="keyword">if</span> (S.charAt(i) == <span class="string">&#x27; &#x27;</span>) &#123;                     </span><br><span class="line">                c[j++] = <span class="string">&#x27;%&#x27;</span>;                             </span><br><span class="line">                c[j++] = <span class="string">&#x27;2&#x27;</span>;                             </span><br><span class="line">                c[j++] = <span class="string">&#x27;0&#x27;</span>;                             </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;                                      </span><br><span class="line">                c[j++] = S.charAt(i);                     </span><br><span class="line">            &#125;                                             </span><br><span class="line">        &#125;                                                 </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(c);                             </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//runtime:16 ms</span></span><br><span class="line"><span class="comment">//memory:45.8 MB</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="解题二"><a class="markdownIt-Anchor" href="#解题二"></a> 解题二</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">replaceSpaces</span><span class="params">(String S, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> S.substring(<span class="number">0</span>, length).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;%20&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//runtime:11 ms</span></span><br><span class="line"><span class="comment">//memory:47.1 MB</span></span><br></pre></td></tr></table></figure><h5 id="解题三"><a class="markdownIt-Anchor" href="#解题三"></a> 解题三</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">replaceSpaces</span><span class="params">(String S, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        StringBuilder  sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (S.charAt(i) == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;%20&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sb.append(S.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//runtime:19 ms</span></span><br><span class="line"><span class="comment">//memory:46.1 MB</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为hexo添加RSS订阅</title>
      <link href="/2019/02/22/%E4%B8%BAhexo%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85/"/>
      <url>/2019/02/22/%E4%B8%BAhexo%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="安装hexo-generator-feed"><a class="markdownIt-Anchor" href="#安装hexo-generator-feed"></a> 安装<a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></h4><p>在hexo根目录下执行下列命令</p><pre><code>npm install hexo-generator-feed --save</code></pre><p>然后在<code>_config.yml</code> 中配置如下：</p><pre><code>feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: ' '  order_by: -date  icon: icon.png</code></pre><p>我用的主题是<a href="https://github.com/Molunerfinn/hexo-theme-melody">hexo-theme-melody</a>，在主题对应的<code>_config.yml</code>中的social下加入</p><pre><code>social:rss fa: /atom.xml</code></pre><p>然后<code>hexo g</code>重新渲染，<code>hexo s</code>重启项目，就可以在首页看到RSS按钮了。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo-generator-feed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为hexo添加hexo-admin组件</title>
      <link href="/2019/02/21/%E4%B8%BAhexo%E6%B7%BB%E5%8A%A0hexo-admin%E7%BB%84%E4%BB%B6/"/>
      <url>/2019/02/21/%E4%B8%BAhexo%E6%B7%BB%E5%8A%A0hexo-admin%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h4><blockquote><p>已安装好<a href="https://hexo.io/zh-cn/">hexo</a>，选择好自己的<a href="https://hexo.io/themes/">主题</a>(我选择的主题是<a href="https://github.com/Molunerfinn/hexo-theme-melody">melody</a>)，并部署到<a href="https://github.com/">GitHub</a>等静态托管服务器上。</p></blockquote><h4 id="插件介绍"><a class="markdownIt-Anchor" href="#插件介绍"></a> 插件介绍</h4><blockquote><p><a href="https://github.com/jaredly/hexo-admin"><strong>hexo-admin</strong></a> 是一个Hexo博客引擎的管理用户界面插件。这个插件最初是作为本地编辑器设计的，在本地运行<a href="https://hexo.io/zh-cn/">hexo</a>使用<strong>hexo-admin</strong>编写文章，然后通过<code>hexo g</code>或<code>hexo d</code>（<code>hexo g</code>是本地渲染，<code>hexo d</code>是将渲染的静态页面发布到<a href="https://github.com/">GitHub</a>）将生成的静态页面发布到<a href="https://github.com/">GitHub</a>等静态服务器。如果你使用的是非静态托管服务器，比如自己买的主机搭建的<a href="https://hexo.io/zh-cn/">hexo</a>，那么一定要设置<a href="https://github.com/jaredly/hexo-admin"><strong>hexo-admin</strong></a>  的密码，否则谁都可以编辑你的文章。</p></blockquote><h4 id="插件安装"><a class="markdownIt-Anchor" href="#插件安装"></a> 插件安装</h4><ol><li><p>首先进入hexo创建的博客项目的根目录下，执行</p><pre><code> npm install --save hexo-admin</code></pre><p>mac可能需要root权限，前面加个<code>sudo</code> 就可以了。如果报错缺少组件，则缺少什么安装什么，<code>npm install</code> 加缺少的组件。</p></li><li><p>运行下列命令启动<a href="https://github.com/jaredly/hexo-admin"><strong>hexo-admin</strong></a> ：</p><p>hexo server -d<br />打开 <a href="http://localhost:4000/admin/">http://localhost:4000/admin/</a>  就可以访问到hexo-admin管理页面了。<br /><img src="/images/pasted-2.png" alt="upload successful" /></p></li></ol><h4 id="密码保护"><a class="markdownIt-Anchor" href="#密码保护"></a> 密码保护</h4><p>打开<code>setting</code>，点击<code>Setup authentification here</code>输入用户名，密码，密钥，下面会自动生成配置文件，复制加在<a href="https://hexo.io/zh-cn/">hexo</a>根目录下的<code>_config.yml</code>中：</p><pre><code>admin:  username: myfavoritename  password_hash: be121740bf988b2225a313fa1f107ca1  secret: a secret something</code></pre><p>重启<a href="https://hexo.io/zh-cn/">hexo</a>，就可以看到登录页面了<br /><img src="/images/pasted-1.png" alt="upload successful" /></p><h4 id="发布文章"><a class="markdownIt-Anchor" href="#发布文章"></a> 发布文章</h4><p>进入后台之后点击<code>Deploy</code>，里面的Deploy按钮是用来执行发布脚本的，所以我们先在博客根目录下新建个目录<code>admin_script</code>，然后在目录中新建一个脚本<code>hexo-d.sh</code>，里面写下下面代码然后保存，</p><pre><code>hexo g &amp;&amp; hexo d</code></pre><p>然后给hexo-d.sh加入可执行权限</p><pre><code>chmod +x hexo-d.sh</code></pre><p>然后在<code>_config.yml</code>中的admin下添加</p><pre><code>admin:  username: myfavoritename  password_hash: be121740bf988b2225a313fa1f107ca1  secret: a secret something  deployCommand: ./admin_script/hexo-d.sh</code></pre><p>设置发布执行的脚本，点击<code>Deploy</code>就会执行这个命令并提交到<a href="https://github.com/">GitHub</a>上。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo-admin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/02/19/hello-world/"/>
      <url>/2019/02/19/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
